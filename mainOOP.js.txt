// let board = [];

function Game() {
  let board = [[3, 2, 1], [], []];
  let [a, b, c] = board;
  let moves = 0;

  setUpGame = () => {
    this.board = [[3, 2, 1], [], []];
    this.moves = 0;
    renderBoard();
  };

  renderBoard = () => {
    this.board.map((obj, number) => {
      console.log(`Tower ${number} --- ${obj.join(' ')}`);
    });
    console.log(`Moves: ${this.moves}`);
  };

  moveDisc = (fromPeg, toPeg) => {
    if (this.validateMove(fromPeg, toPeg)) {
      const topDisc = fromPeg.pop();
      this.moves += 1;

      toPeg.push(topDisc);
      console.log(`That move was successful. The board looks like this: `);
      renderBoard();

      // check if game was won
      if (
        board[0].length === 0 &&
        (board[1].length === 3 || board[2].length === 3)
      ) {
        console.log(`Great job! You beat the game in ${moves} moves!`);
        console.log("Let's play again now!");
        setUpGame();
      }
    } else {
      console.error('That move is invalid!');
    }
  };

  validateMove = (fromPeg, toPeg) =>
    !toPeg.length || toPeg.slice(-1) > fromPeg.slice(-1);
}

const board = new Board();

console.log(board.moveDisc(a, b));
console.log(board.moveDisc(a, c));
console.log(board.moveDisc(b, c));
console.log(board.moveDisc(a, b));
console.log(board.moveDisc(c, a));
console.log(board.moveDisc(c, b));
